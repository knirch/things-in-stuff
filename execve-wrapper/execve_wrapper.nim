from dynlib import LibHandle, symAddr
import posix

var RTLD_NEXT {.importc: "RTLD_NEXT", header: "<dlfcn.h>".}: LibHandle

proc execve(
    path: cstring, argv: ptr ptr cstring, envp: ptr ptr cstring
): cint {.cdecl, exportc, dynlib.} =
  let origExecve = cast[proc(
    path: cstring, argv: ptr ptr cstring, envp: ptr ptr cstring
  ): cint {.cdecl.}](dlsym(RTLD_NEXT, "execve"))
  echo path
  if origExecve.isNil:
    writeStackTrace()
    return -1
  return origExecve(path, argv, envp)

